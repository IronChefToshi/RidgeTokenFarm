{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ClaimChain/RidgeTokenFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ClaimChain/RidgeTokenFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\ClaimChain\\\\RidgeTokenFarm\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport DaiToken from '../abis/DaiToken.json';\nimport BVRToken from '../abis/BVRToken.json';\nimport TokenFarm from '../abis/TokenFarm.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport './App.css';\n\nclass App extends Component {\n  componentWillMount() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.loadWeb3();\n\n          case 2:\n            _context.next = 4;\n            return _this.loadBlockchainData();\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n\n  loadBlockchainData() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var web3, accounts, networkId, daiTokenData, daiToken, daiTokenBalance, bvrTokenData, bvrToken, bvrTokenBalance, tokenFarmData, tokenFarm, stakingBalance;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            web3 = window.web3;\n            _context2.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context2.sent;\n\n            _this2.setState({\n              account: accounts[0]\n            });\n\n            _context2.next = 7;\n            return web3.eth.net.getId();\n\n          case 7:\n            networkId = _context2.sent;\n            // Load DaiToken\n            daiTokenData = DaiToken.networks[networkId];\n\n            if (!daiTokenData) {\n              _context2.next = 18;\n              break;\n            }\n\n            daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address);\n\n            _this2.setState({\n              daiToken\n            });\n\n            _context2.next = 14;\n            return daiToken.methods.balanceOf(_this2.state.account).call();\n\n          case 14:\n            daiTokenBalance = _context2.sent;\n\n            _this2.setState({\n              daiTokenBalance: daiTokenBalance.toString()\n            });\n\n            _context2.next = 19;\n            break;\n\n          case 18:\n            window.alert('DaiToken contract not deployed to detected network');\n\n          case 19:\n            // Load BVRToken\n            bvrTokenData = BVRToken.networks[networkId];\n\n            if (!bvrTokenData) {\n              _context2.next = 29;\n              break;\n            }\n\n            bvrToken = new web3.eth.Contract(BVRToken.abi, bvrTokenData.address);\n\n            _this2.setState({\n              bvrToken\n            });\n\n            _context2.next = 25;\n            return bvrToken.methods.balanceOf(_this2.state.account).call();\n\n          case 25:\n            bvrTokenBalance = _context2.sent;\n\n            _this2.setState({\n              bvrTokenBalance: bvrTokenBalance.toString()\n            });\n\n            _context2.next = 30;\n            break;\n\n          case 29:\n            window.alert('BVRToken contract not deployed to detected network');\n\n          case 30:\n            // Load TokenFarm\n            tokenFarmData = TokenFarm.networks[networkId];\n\n            if (!tokenFarmData) {\n              _context2.next = 40;\n              break;\n            }\n\n            tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address);\n\n            _this2.setState({\n              tokenFarm\n            });\n\n            _context2.next = 36;\n            return tokenFarm.methods.stakingBalance(_this2.state.account).call();\n\n          case 36:\n            stakingBalance = _context2.sent;\n\n            _this2.setState({\n              stakingBalance: stakingBalance.toString()\n            });\n\n            _context2.next = 41;\n            break;\n\n          case 40:\n            window.alert('TokenFarm contract not deployed to detected network');\n\n          case 41:\n            _this2.setState({\n              loading: false\n            });\n\n          case 42:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n\n  loadWeb3() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!window.ethereum) {\n              _context3.next = 6;\n              break;\n            }\n\n            window.web3 = new Web3(window.ethereum);\n            _context3.next = 4;\n            return window.ethereum.enable();\n\n          case 4:\n            _context3.next = 7;\n            break;\n\n          case 6:\n            if (window.web3) {\n              window.web3 = new Web3(window.web3.currentProvider);\n            } else {\n              window.alert(\"Non-Ethereum browser detected. You should try MetaMask!\");\n            }\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }))();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '0x0',\n      daiToken: {},\n      bvrToken: {},\n      tokenFarm: {},\n      daiTokenBalance: '0',\n      bvrTokenBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n  }\n\n  render() {\n    let content;\n\n    if (this.state.loading) {\n      content = /*#__PURE__*/React.createElement(\"p\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, \"Loading...\");\n    } else {\n      content = /*#__PURE__*/React.createElement(Main, {\n        daiTokenBalance: this.state.daiTokenBalance,\n        bvrTokenBalance: this.state.bvrTokenBalance,\n        stakingBalance: this.state.stakingBalance,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      account: this.state.account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      role: \"main\",\n      className: \"col-lg-12 ml-auto mr-auto\",\n      style: {\n        maxWidth: '600px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content mr-auto ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://www.dappuniversity.com/bootcamp\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), content)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ClaimChain/RidgeTokenFarm/src/components/App.js"],"names":["React","Component","Web3","DaiToken","BVRToken","TokenFarm","Navbar","Main","App","componentWillMount","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","net","getId","networkId","daiTokenData","networks","daiToken","Contract","abi","address","methods","balanceOf","state","call","daiTokenBalance","toString","alert","bvrTokenData","bvrToken","bvrTokenBalance","tokenFarmData","tokenFarm","stakingBalance","loading","ethereum","enable","currentProvider","constructor","props","render","content","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport DaiToken from '../abis/DaiToken.json'\r\nimport BVRToken from '../abis/BVRToken.json'\r\nimport TokenFarm from '../abis/TokenFarm.json'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n\r\n    const networkId = await web3.eth.net.getId()\r\n\r\n    // Load DaiToken\r\n    const daiTokenData = DaiToken.networks[networkId]\r\n    if(daiTokenData) {\r\n      const daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address)\r\n      this.setState({ daiToken })\r\n      let daiTokenBalance = await daiToken.methods.balanceOf(this.state.account).call()\r\n      this.setState({ daiTokenBalance: daiTokenBalance.toString() })\r\n    } else {\r\n      window.alert('DaiToken contract not deployed to detected network')\r\n    }\r\n\r\n    // Load BVRToken\r\n    const bvrTokenData = BVRToken.networks[networkId]\r\n    if(bvrTokenData) {\r\n      const bvrToken = new web3.eth.Contract(BVRToken.abi, bvrTokenData.address)\r\n      this.setState({ bvrToken })\r\n      let bvrTokenBalance = await bvrToken.methods.balanceOf(this.state.account).call()\r\n      this.setState({ bvrTokenBalance: bvrTokenBalance.toString() })\r\n    } else {\r\n      window.alert('BVRToken contract not deployed to detected network')\r\n    }\r\n\r\n    // Load TokenFarm\r\n    const tokenFarmData = TokenFarm.networks[networkId]\r\n    if(tokenFarmData) {\r\n      const tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address)\r\n      this.setState({ tokenFarm })\r\n      let stakingBalance = await tokenFarm.methods.stakingBalance(this.state.account).call()\r\n      this.setState({ stakingBalance: stakingBalance.toString() })\r\n    } else {\r\n      window.alert('TokenFarm contract not deployed to detected network')\r\n    }    \r\n\r\n    this.setState({ loading: false })\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert(\"Non-Ethereum browser detected. You should try MetaMask!\")\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '0x0',\r\n      daiToken: {},\r\n      bvrToken: {},\r\n      tokenFarm: {},\r\n      daiTokenBalance: '0',\r\n      bvrTokenBalance: '0',\r\n      stakingBalance: '0',\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let content\r\n    if(this.state.loading) {\r\n      content = <p id=\"loader\" className=\"text-center\">Loading...</p>\r\n    } else {\r\n      content = <Main \r\n        daiTokenBalance={this.state.daiTokenBalance}\r\n        bvrTokenBalance={this.state.bvrTokenBalance}\r\n        stakingBalance={this.state.stakingBalance}\r\n      />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <a\r\n                  href=\"http://www.dappuniversity.com/bootcamp\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                </a>\r\n\r\n                {content}\r\n\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}