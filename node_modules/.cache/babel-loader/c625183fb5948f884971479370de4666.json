{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ClaimChain/RidgeTokenFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/ClaimChain/RidgeTokenFarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{Component}from'react';import Web3 from'web3';import DaiToken from'../abis/DaiToken.json';import BVRToken from'../abis/BVRToken.json';import TokenFarm from'../abis/TokenFarm.json';import Navbar from'./Navbar';import Main from'./Main';import'./App.css';class App extends Component{componentWillMount(){var _this=this;return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return _this.loadWeb3();case 2:_context.next=4;return _this.loadBlockchainData();case 4:case\"end\":return _context.stop();}},_callee);}))();}loadBlockchainData(){var _this2=this;return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var web3,accounts,networkId,daiTokenData,daiToken,daiTokenBalance,bvrTokenData,bvrToken,bvrTokenBalance,tokenFarmData,tokenFarm,stakingBalance;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:web3=window.web3;_context2.next=3;return web3.eth.getAccounts();case 3:accounts=_context2.sent;_this2.setState({account:accounts[0]});_context2.next=7;return web3.eth.net.getId();case 7:networkId=_context2.sent;// Load DaiToken\ndaiTokenData=DaiToken.networks[networkId];if(!daiTokenData){_context2.next=18;break;}daiToken=new web3.eth.Contract(DaiToken.abi,daiTokenData.address);_this2.setState({daiToken});_context2.next=14;return daiToken.methods.balanceOf(_this2.state.account).call();case 14:daiTokenBalance=_context2.sent;_this2.setState({daiTokenBalance:daiTokenBalance.toString()});_context2.next=19;break;case 18:window.alert('DaiToken contract not deployed to detected network');case 19:// Load BVRToken\nbvrTokenData=BVRToken.networks[networkId];if(!bvrTokenData){_context2.next=29;break;}bvrToken=new web3.eth.Contract(BVRToken.abi,bvrTokenData.address);_this2.setState({bvrToken});_context2.next=25;return bvrToken.methods.balanceOf(_this2.state.account).call();case 25:bvrTokenBalance=_context2.sent;_this2.setState({bvrTokenBalance:bvrTokenBalance.toString()});_context2.next=30;break;case 29:window.alert('BVRToken contract not deployed to detected network');case 30:// Load TokenFarm\ntokenFarmData=TokenFarm.networks[networkId];if(!tokenFarmData){_context2.next=40;break;}tokenFarm=new web3.eth.Contract(TokenFarm.abi,tokenFarmData.address);_this2.setState({tokenFarm});_context2.next=36;return tokenFarm.methods.stakingBalance(_this2.state.account).call();case 36:stakingBalance=_context2.sent;_this2.setState({stakingBalance:stakingBalance.toString()});_context2.next=41;break;case 40:window.alert('TokenFarm contract not deployed to detected network');case 41:_this2.setState({loading:false});case 42:case\"end\":return _context2.stop();}},_callee2);}))();}loadWeb3(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:if(!window.ethereum){_context3.next=6;break;}window.web3=new Web3(window.ethereum);_context3.next=4;return window.ethereum.enable();case 4:_context3.next=7;break;case 6:if(window.web3){window.web3=new Web3(window.web3.currentProvider);}else{window.alert(\"Non-Ethereum browser detected. You should try MetaMask!\");}case 7:case\"end\":return _context3.stop();}},_callee3);}))();}constructor(props){super(props);this.state={account:'0x0',daiToken:{},bvrToken:{},tokenFarm:{},daiTokenBalance:'0',bvrTokenBalance:'0',stakingBalance:'0',loading:true};}render(){let content;if(this.state.loading){content=/*#__PURE__*/React.createElement(\"p\",{id:\"loader\",className:\"text-center\"},\"Loading...\");}else{content=/*#__PURE__*/React.createElement(Main,{daiTokenBalance:this.state.daiTokenBalance,bvrTokenBalance:this.state.bvrTokenBalance,stakingBalance:this.state.stakingBalance});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Navbar,{account:this.state.account}),/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid mt-5\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"main\",{role:\"main\",className:\"col-lg-12 ml-auto mr-auto\",style:{maxWidth:'600px'}},/*#__PURE__*/React.createElement(\"div\",{className:\"content mr-auto ml-auto\"},/*#__PURE__*/React.createElement(\"a\",{href:\"http://www.dappuniversity.com/bootcamp\",target:\"_blank\",rel:\"noopener noreferrer\"}),content)))));}}export default App;","map":{"version":3,"sources":["C:/Users/ClaimChain/RidgeTokenFarm/src/components/App.js"],"names":["React","Component","Web3","DaiToken","BVRToken","TokenFarm","Navbar","Main","App","componentWillMount","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","net","getId","networkId","daiTokenData","networks","daiToken","Contract","abi","address","methods","balanceOf","state","call","daiTokenBalance","toString","alert","bvrTokenData","bvrToken","bvrTokenBalance","tokenFarmData","tokenFarm","stakingBalance","loading","ethereum","enable","currentProvider","constructor","props","render","content","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport DaiToken from '../abis/DaiToken.json'\r\nimport BVRToken from '../abis/BVRToken.json'\r\nimport TokenFarm from '../abis/TokenFarm.json'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n\r\n    const networkId = await web3.eth.net.getId()\r\n\r\n    // Load DaiToken\r\n    const daiTokenData = DaiToken.networks[networkId]\r\n    if(daiTokenData) {\r\n      const daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address)\r\n      this.setState({ daiToken })\r\n      let daiTokenBalance = await daiToken.methods.balanceOf(this.state.account).call()\r\n      this.setState({ daiTokenBalance: daiTokenBalance.toString() })\r\n    } else {\r\n      window.alert('DaiToken contract not deployed to detected network')\r\n    }\r\n\r\n    // Load BVRToken\r\n    const bvrTokenData = BVRToken.networks[networkId]\r\n    if(bvrTokenData) {\r\n      const bvrToken = new web3.eth.Contract(BVRToken.abi, bvrTokenData.address)\r\n      this.setState({ bvrToken })\r\n      let bvrTokenBalance = await bvrToken.methods.balanceOf(this.state.account).call()\r\n      this.setState({ bvrTokenBalance: bvrTokenBalance.toString() })\r\n    } else {\r\n      window.alert('BVRToken contract not deployed to detected network')\r\n    }\r\n\r\n    // Load TokenFarm\r\n    const tokenFarmData = TokenFarm.networks[networkId]\r\n    if(tokenFarmData) {\r\n      const tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address)\r\n      this.setState({ tokenFarm })\r\n      let stakingBalance = await tokenFarm.methods.stakingBalance(this.state.account).call()\r\n      this.setState({ stakingBalance: stakingBalance.toString() })\r\n    } else {\r\n      window.alert('TokenFarm contract not deployed to detected network')\r\n    }    \r\n\r\n    this.setState({ loading: false })\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert(\"Non-Ethereum browser detected. You should try MetaMask!\")\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '0x0',\r\n      daiToken: {},\r\n      bvrToken: {},\r\n      tokenFarm: {},\r\n      daiTokenBalance: '0',\r\n      bvrTokenBalance: '0',\r\n      stakingBalance: '0',\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let content\r\n    if(this.state.loading) {\r\n      content = <p id=\"loader\" className=\"text-center\">Loading...</p>\r\n    } else {\r\n      content = <Main \r\n        daiTokenBalance={this.state.daiTokenBalance}\r\n        bvrTokenBalance={this.state.bvrTokenBalance}\r\n        stakingBalance={this.state.stakingBalance}\r\n      />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <a\r\n                  href=\"http://www.dappuniversity.com/bootcamp\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                </a>\r\n\r\n                {content}\r\n\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}